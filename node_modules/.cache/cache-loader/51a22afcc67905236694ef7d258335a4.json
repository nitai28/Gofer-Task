{"remainingRequest":"C:\\Users\\Nitai\\Desktop\\Gofer home assignment\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Nitai\\Desktop\\Gofer home assignment\\node_modules\\vue-loader\\lib\\selector.js?type=script&index=0!C:\\Users\\Nitai\\Desktop\\Gofer home assignment\\src\\components\\book-edit.vue","dependencies":[{"path":"C:\\Users\\Nitai\\Desktop\\Gofer home assignment\\src\\components\\book-edit.vue","mtime":1534228245284},{"path":"C:\\Users\\Nitai\\Desktop\\Gofer home assignment\\.babelrc","mtime":1524309964448},{"path":"C:\\Users\\Nitai\\Desktop\\Gofer home assignment\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534227874529},{"path":"C:\\Users\\Nitai\\Desktop\\Gofer home assignment\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\Nitai\\Desktop\\Gofer home assignment\\node_modules\\vue-loader\\lib\\selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["import _objectSpread from \"C:\\\\Users\\\\Nitai\\\\Desktop\\\\Gofer home assignment\\\\node_modules\\\\@babel\\\\runtime/helpers/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport bookService from '../services/contact.service.js';\nimport DatePicker from 'vue2-datepicker';\nimport { Validator } from 'vee-validate';\nexport default {\n  props: ['book', 'isActive', 'addMode'],\n  created: function created() {},\n  data: function data() {\n    return {\n      bookEdit: this.book ? _objectSpread({}, this.book) : bookService.getEmptyObj(),\n      title: ''\n    };\n  },\n  methods: {\n    validateBeforeSubmit: function validateBeforeSubmit() {\n      var _this = this;\n\n      this.$validator.validateAll().then(function (result) {\n        if (result) {\n          if (!_this.bookEdit.imgSrc) _this.bookEdit.imgSrc = './img/books/noimages.png';\n\n          _this.$store.dispatch({\n            type: 'saveBook',\n            book: _this.bookEdit\n          }).then(function () {\n            _this.closeModal();\n\n            _this.$emit('closeEditModal');\n          });\n\n          return;\n        }\n\n        _this.$swal('Oops...', 'Please fill all the missing fields !', 'error');\n      });\n    },\n    closeModal: function closeModal() {\n      this.$parent.showModal = false;\n\n      if (this.addMode) {\n        this.$parent.toAdd = false;\n      }\n    }\n  },\n  components: {\n    DatePicker: DatePicker,\n    bookService: bookService,\n    Validator: Validator\n  }\n};",{"version":3,"sources":["book-edit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AAEA;8BAEA;8BAEA,CACA;wBACA;;uEAEA;aAEA,AACA;AAJA;AAKA;;;AAGA;;2DACA;oBACA;8DACA;;;;wBACA;8BACA;kBACA;;wBACA;AACA;;AACA;AACA;;uEAEA;AACA;AAEA;sCACA;+BACA;;wBACA;6BACA;AACA;AAEA,AAEA;AAzBA;AA0BA;AAEA;AACA;AACA,AAEA;AALA;AAxCA","file":"book-edit.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n    <section class=\"book-edit\">\r\n        <div :class=\"{'is-active':isActive,'modal':isActive} \">\r\n            <div class=\"modal-background\"></div>\r\n            <div class=\"modal-card\">\r\n                <header class=\"modal-card-head\">\r\n                    <p v-if=\"!addMode\" class=\"modal-card-title\">Book Edit</p>\r\n                    <p v-else class=\"modal-card-title\">Add Book</p>\r\n                    <button class=\"delete\" aria-label=\"close\" @click=\"closeModal()\"></button>\r\n                </header>\r\n                <section class=\"modal-card-body\">\r\n                    <form action=\"\" @submit.prevent=\"validateBeforeSubmit\">\r\n                        <label for=\"Title\">Title</label>\r\n                        <input class=\"input\" id=\"Title\" name=\"Title\" type=\"text\" v-validate.immediate=\"'required'\"\r\n                               v-model=\"bookEdit.bookTitle\" placeholder=\"Book Title\">\r\n                        <p class=\"error-message\">{{ errors.first('Title') }}</p>\r\n\r\n                        <div>\r\n                            <date-picker lang=\"en\" v-model=\"bookEdit.publishedDate\" input-name=\"date\"\r\n                                         format=\"YYYY-MM-DD\" :not-after=\"new Date()\"></date-picker>\r\n                        </div>\r\n                        <label for=\"Author\">Author</label>\r\n                        <input class=\"input\" id=\"Author\" name=\"Author\" type=\"text\" v-model=\"bookEdit.authorName\"\r\n                               v-validate.immediate=\"'required'\" placeholder=\"Book Author Name\">\r\n                        <p v-show=\"errors.first('Title')\" class=\"error-message\">{{ errors.first('Author') }}</p>\r\n\r\n\r\n                        <label for=\"Book Cover\">Book Cover Image</label>\r\n                        <input class=\"input\" id=\"Book Cover\" type=\"text\" v-model=\"bookEdit.imgSrc\">\r\n\r\n                        <label for=\"Desctiption\">Desctiption</label>\r\n                        <textarea class=\"textarea\" id=\"Desctiption\" type=\"text\"\r\n                                  v-model=\"bookEdit.description\" placeholder=\"Book Description\"></textarea>\r\n                        <footer class=\"modal-card-foot\">\r\n                            <button v-if=\"!addMode\" type=\"submit\" class=\"button is-success\">Save</button>\r\n                            <button v-else type=\"submit\" class=\"button is-success\">Add book</button>\r\n                            <button type=\"button\" class=\"button\" @click=\"closeModal()\">Cancel</button>\r\n                        </footer>\r\n                    </form>\r\n                </section>\r\n            </div>\r\n        </div>\r\n    </section>\r\n\r\n\r\n</template>\r\n\r\n\r\n<script>\r\n    import bookService from '../services/contact.service.js'\r\n    import DatePicker from 'vue2-datepicker'\r\n    import {Validator} from 'vee-validate';\r\n\r\n    export default {\r\n        props: ['book', 'isActive', 'addMode'],\r\n        created() {\r\n\r\n        },\r\n        data() {\r\n            return {\r\n                bookEdit: (this.book) ? {...this.book} : bookService.getEmptyObj(),\r\n                title: '',\r\n\r\n            }\r\n        },\r\n        methods: {\r\n\r\n            validateBeforeSubmit() {\r\n                this.$validator.validateAll().then((result) => {\r\n                    if (result) {\r\n                        if(!this.bookEdit.imgSrc) this.bookEdit.imgSrc='./img/books/noimages.png'\r\n                        this.$store.dispatch({type: 'saveBook', book: this.bookEdit})\r\n                            .then(() => {\r\n                                this.closeModal();\r\n                                this.$emit('closeEditModal')\r\n                            })\r\n                        return;\r\n                    }\r\n                    this.$swal('Oops...', 'Please fill all the missing fields !', 'error')\r\n\r\n                })\r\n            },\r\n\r\n            closeModal() {\r\n                this.$parent.showModal = false;\r\n                if (this.addMode) {\r\n                    this.$parent.toAdd = false\r\n                }\r\n            }\r\n\r\n        },\r\n\r\n        components:\r\n            {\r\n                DatePicker,\r\n                bookService,\r\n                Validator\r\n            },\r\n\r\n    }\r\n\r\n</script>\r\n\r\n<style scoped>\r\n    .input {\r\n        text-align: left;\r\n    }\r\n\r\n    .textarea {\r\n        text-align: left;\r\n\r\n    }\r\n\r\n    .error-message {\r\n        color: red;\r\n        margin-top: -5px;\r\n        font-size: 12px;\r\n        margin-bottom: 9px;\r\n    }\r\n\r\n    .modal-background {\r\n        position: fixed;\r\n    }\r\n\r\n    .modal-card {\r\n        max-width: 80%;\r\n    }\r\n\r\n</style>"]}]}