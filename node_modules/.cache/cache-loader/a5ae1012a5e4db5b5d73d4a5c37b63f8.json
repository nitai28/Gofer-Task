{"remainingRequest":"C:\\Users\\Nitai\\Desktop\\Gofer home assignment\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Nitai\\Desktop\\Gofer home assignment\\node_modules\\vue-loader\\lib\\selector.js?type=script&index=0!C:\\Users\\Nitai\\Desktop\\Gofer home assignment\\src\\components\\UploadImg.vue","dependencies":[{"path":"C:\\Users\\Nitai\\Desktop\\Gofer home assignment\\src\\components\\UploadImg.vue","mtime":1534501360940},{"path":"C:\\Users\\Nitai\\Desktop\\Gofer home assignment\\.babelrc","mtime":1524309964448},{"path":"C:\\Users\\Nitai\\Desktop\\Gofer home assignment\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534227874529},{"path":"C:\\Users\\Nitai\\Desktop\\Gofer home assignment\\node_modules\\babel-loader\\lib\\index.js","mtime":1519636541000},{"path":"C:\\Users\\Nitai\\Desktop\\Gofer home assignment\\node_modules\\vue-loader\\lib\\selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  props: ['imgs', 'round', 'showCounter', 'showClose'],\n  data: function data() {\n    return {\n      cloudinary: {\n        uploadPreset: 'yezwubfp',\n        apiKey: '142484333591595',\n        cloudName: 'amielsosa'\n      },\n      loadingImg: false,\n      thumb: {\n        url: ''\n      },\n      thumbs: []\n    };\n  },\n  computed: {\n    clUrl: function clUrl() {\n      return \"https://api.cloudinary.com/v1_1/\".concat(this.cloudinary.cloudName, \"/upload\");\n    }\n  },\n  methods: {\n    addThumb: function addThumb() {\n      this.thumbs.unshift(this.thumb);\n    },\n    upload: function upload(file) {\n      var _this = this;\n\n      this.loadingImg = true;\n      var formData = new FormData();\n      formData.append('file', file[0]);\n      formData.append('upload_preset', this.cloudinary.uploadPreset);\n      formData.append('tags', 'gs-vue,gs-vue-uploaded'); // For debug purpose only\n      // Inspects the content of formData\n      // for (var pair of formData.entries()) {\n      //   (pair[0] + ', ' + pair[1]);\n      // }\n\n      axios.post(this.clUrl, formData).then(function (res) {\n        _this.$emit('uploadImg', res.data.secure_url);\n\n        _this.thumbs.unshift({\n          url: res.data.secure_url\n        }); // this.uploadImgCount++;\n\n\n        _this.loadingImg = false;\n      });\n    },\n    removeImg: function removeImg(idx) {\n      this.imgs.splice(idx, 1);\n    }\n  }\n};",{"version":3,"sources":["UploadImg.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;0CAEA;wBACA;;;sBAGA;gBACA;mBACA,AACA;AAJA;kBAKA;;aAEA,AACA;AAFA;cAGA,AACA;AAXA;AAYA;;4BAEA;AACA,uEACA,AACA;AACA,AACA;AANA;;kCAQA;+BACA;AACA;;AACA;;wBACA;yBACA;mCACA;uDACA;8BACA,2BACA;AACA;AACA;AACA;AACA;;;0CAEA;;;wBAEA,AACA;AAFA,WAFA,CAKA;;;2BACA;AACA;AACA;uCACA;4BACA;AACA,AACA;AA3BA;AAvBA","file":"UploadImg.vue","sourceRoot":"src\\components","sourcesContent":["\n<template>\n<section class=\"upload-img\">\n    <span v-if=\"showCounter\">{{imgs.length}} / 4</span>\n\n    <div class=\"file flex relative\">\n      <label class=\"file-label\">\n        <button @click.prevent class=\"upload-img-btn flex justify-center align-center\" :class=\"{disabled: imgs.length===4}\" \n                :disabled=\"loadingImg || imgs.length === 4\">\n          <v-icon v-if=\"!loadingImg\" :size=\"50\">add</v-icon>\n          <img class=\"loading-gif\" v-else src=\"@/assets/gifs/loading3.gif\" alt=\"loading gif\">\n        </button>\n        <input :disabled=\"loadingImg || imgs.length === 4\" \n                class=\"above-btn\" type=\"file\" accept=\"image/*\" required\n                @change=\"upload($event.target.files)\"/>\n      </label>\n      \n      <div class=\"img-container\" v-for=\"(imgSrc, idx) in imgs\" :key=\"imgSrc\">\n        <v-icon v-if=\"showClose\" color=\"white\" :size=\"15\" \n                class=\"close-btn\" @click=\"removeImg(idx)\">close</v-icon>\n        <div class=\"img\" :class=\"{round: round}\" \n             :style=\"{'backgroundImage': `url(${imgSrc})`}\"></div>\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n  props: ['imgs', 'round', 'showCounter', 'showClose'],\n  data() {\n    return {\n      cloudinary: {\n        uploadPreset: 'yezwubfp',\n        apiKey: '142484333591595',\n        cloudName: 'amielsosa'\n      },\n      loadingImg: false,\n      thumb: {\n        url: ''\n      },\n      thumbs: []\n    };\n  },\n  computed: {\n    clUrl() {\n      return `https://api.cloudinary.com/v1_1/${\n        this.cloudinary.cloudName\n      }/upload`;\n    }\n  },\n  methods: {\n    addThumb() {\n      this.thumbs.unshift(this.thumb);\n    },\n    upload(file) {\n      this.loadingImg = true;\n      const formData = new FormData();\n      formData.append('file', file[0]);\n      formData.append('upload_preset', this.cloudinary.uploadPreset);\n      formData.append('tags', 'gs-vue,gs-vue-uploaded');\n      // For debug purpose only\n      // Inspects the content of formData\n      // for (var pair of formData.entries()) {\n      //   (pair[0] + ', ' + pair[1]);\n      // }\n      axios.post(this.clUrl, formData).then(res => {\n        this.$emit('uploadImg', res.data.secure_url);\n        this.thumbs.unshift({\n          url: res.data.secure_url\n        });\n        // this.uploadImgCount++;\n        this.loadingImg = false;\n      });\n    },\n    removeImg(idx) {\n      this.imgs.splice(idx, 1);\n    }\n  }\n};\n</script>\n\n<style scoped>\n.file {\n  box-sizing: content-box;\n  height: 70px;\n}\n.file div,\n.file button {\n  border-radius: 5px;\n}\n.file-label {\n  display: inline-block;\n  height: 100%;\n}\n.file-label:hover {\n  cursor: pointer;\n}\n.above-btn {\n  position: absolute;\n  top: 0;\n  left: 0;\n  opacity: 0;\n  height: 100%;\n  width: 70px;\n}\n.above-btn:hover {\n  cursor: pointer;\n}\ninput:hover {\n  cursor: pointer;\n}\n.upload-img-btn {\n  box-shadow: inset 0 0 0 5px #3b4855;\n  background: lightgray;\n  height: 100%;\n  width: 70px;\n}\n.upload-img-btn:hover {\n  background-color: rgb(179, 169, 169);\n}\n.upload-img-btn.disabled {\n  cursor: no-drop;\n  background-color: lightgray;\n  box-shadow: inset 0 0 0 5px gray;\n}\n.upload-img-btn.disabled i {\n  color: gray;\n  cursor: initial;\n}\n.img-container {\n  position: relative;\n  margin-left: 10px;\n}\ndiv.img {\n  height: 70px;\n  width: 70px;\n  background-size: cover;\n  background-position: center;\n}\ndiv.img.round {\n  border-radius: 50%;\n}\n/* div.img::after {\n  content: '';\n  position: absolute;\n  z-index: 3;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  color: rgba(207, 213, 250, 0.4);\n} */\n.loading-gif {\n  height: 70%;\n  width: 70%;\n}\n.close-btn {\n  top: 5px;\n  right: 5px;\n}\n</style>\n"]}]}